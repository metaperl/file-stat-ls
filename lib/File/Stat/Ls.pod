=head1 NAME

File::Stat::Ls - Perl class for converting file stat() to ls -l format 

=head1 SYNOPSIS

  use File::Stat::Ls;

  my $folder = 'some-directory';

  my $o = File::Stat::Ls->new(folder => $folder);
  for my $file ($o->files) {
    
    # get plain-text ls format
    say $file->render_as_text;

    # get plain-text ls format
    printf '<tr>%s</tr>', $file->render_as_html;

  }


=head1 DESCRIPTION

This class contains methods to list the contents of a folder in 
HTML and plain-text ls format.

=cut

=head1 CLASS CONSTRUCTOR

=head2 new ()

=head3 Input variables

=head4 folder (required)

It is the folder whose directory contents you want to list. 

=head4 skipdotfiles (optional)

If you want F<.> and F<..> listed, you have to make this option true.

=back

=head3 Usage

   my $folder = 'mojoapp/public/binary-downloads';
   my $obj = File::Stat::Ls->new(folder => $folder);

=head3 Return 

File::Stat::Ls object.

=cut

=head1 INSTANCE METHODS

This class defines the following common methods, routines, and 
functions.

=head2 format_mode ($mode)

=head3 Input variables

C<$mode> - the third element from stat


=head3 Usage

   my $md = format_mode((stat $fn)[2]);

=head3 Return

string with permission bits such as C<-r-xr-xr-x>.

=cut

=head2 files

=head3 Input variables

None.

=head3 Usage

   for my $file ($instance->files($fn)) {
      print $file->render_as_text;
   }

=head3 Return

A list of L<File::Stat::Ls::Data|File::Stat::Ls::Data> instances.


=cut


=head1 HISTORY

=over 4

=item * Version 0.10

This version includes two methods: format_mode and ls_stat. 
It is uploaded to CPAN on 7/11/2005.

=item * Version 0.11

07/12/2005 (htu) - added stat_attr method.

=item * Version 0.12

06/02/11 - (tbone)

Original code would only run on unix because of use of getpwuid et al. Fixed to run on
Windows.

L<Moose> is now a required module.

F<script> directory includes sample code for producing html and text folder listings.

The API works well with Mojo. The main reason for upgrading the module was so that
I could provide static directory listings for Mojo, hence F<script/mojo> contains
a completely working example for L<Mojolicious>. But also see 
L<App::DirServe|https://github.com/tempire/app-dirserve/blob/master/dirserve>. 

=cut

=head1 SEE ALSO 

L<IO::Dir> (used internally by updated version).

=head1 REPO

L<https://github.com/metaperl/file-stat-ls>

=head1 AUTHOR

=head2 Original Author

Copyright (c) 2005 Hanming Tu.  All rights reserved.

This package is free software and is provided "as is" without express
or implied warranty.  It may be used, redistributed and/or modified
under the terms of the Perl Artistic License (see
http://www.perl.com/perl/misc/Artistic.html)

=head2 Mark-Jason Dominus

C<format_mode> is borrowed from L<Stat::lsMode|Stat::lsMode> by 
Mark_Jason Dominus.

=head2 Terrence Brannon.

Updated 6/2011

=cut


